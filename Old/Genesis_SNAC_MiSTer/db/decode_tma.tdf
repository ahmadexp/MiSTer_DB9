--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:25:18:06:53:SJ cbx_lpm_add_sub 2017:10:25:18:06:53:SJ cbx_lpm_compare 2017:10:25:18:06:53:SJ cbx_lpm_decode 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ cbx_nadder 2017:10:25:18:06:53:SJ cbx_stratix 2017:10:25:18:06:53:SJ cbx_stratixii 2017:10:25:18:06:53:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_tma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode2021w[1..0]	: WIRE;
	w_anode2030w[3..0]	: WIRE;
	w_anode2047w[3..0]	: WIRE;
	w_anode2057w[3..0]	: WIRE;
	w_anode2067w[3..0]	: WIRE;
	w_anode2077w[3..0]	: WIRE;
	w_anode2087w[3..0]	: WIRE;
	w_anode2097w[3..0]	: WIRE;
	w_anode2107w[3..0]	: WIRE;
	w_anode2119w[1..0]	: WIRE;
	w_anode2126w[3..0]	: WIRE;
	w_anode2137w[3..0]	: WIRE;
	w_anode2147w[3..0]	: WIRE;
	w_anode2157w[3..0]	: WIRE;
	w_anode2167w[3..0]	: WIRE;
	w_anode2177w[3..0]	: WIRE;
	w_anode2187w[3..0]	: WIRE;
	w_anode2197w[3..0]	: WIRE;
	w_data2019w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode2197w[3..3], w_anode2187w[3..3], w_anode2177w[3..3], w_anode2167w[3..3], w_anode2157w[3..3], w_anode2147w[3..3], w_anode2137w[3..3], w_anode2126w[3..3]), ( w_anode2107w[3..3], w_anode2097w[3..3], w_anode2087w[3..3], w_anode2077w[3..3], w_anode2067w[3..3], w_anode2057w[3..3], w_anode2047w[3..3], w_anode2030w[3..3]));
	w_anode2021w[] = ( (w_anode2021w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode2030w[] = ( (w_anode2030w[2..2] & (! w_data2019w[2..2])), (w_anode2030w[1..1] & (! w_data2019w[1..1])), (w_anode2030w[0..0] & (! w_data2019w[0..0])), w_anode2021w[1..1]);
	w_anode2047w[] = ( (w_anode2047w[2..2] & (! w_data2019w[2..2])), (w_anode2047w[1..1] & (! w_data2019w[1..1])), (w_anode2047w[0..0] & w_data2019w[0..0]), w_anode2021w[1..1]);
	w_anode2057w[] = ( (w_anode2057w[2..2] & (! w_data2019w[2..2])), (w_anode2057w[1..1] & w_data2019w[1..1]), (w_anode2057w[0..0] & (! w_data2019w[0..0])), w_anode2021w[1..1]);
	w_anode2067w[] = ( (w_anode2067w[2..2] & (! w_data2019w[2..2])), (w_anode2067w[1..1] & w_data2019w[1..1]), (w_anode2067w[0..0] & w_data2019w[0..0]), w_anode2021w[1..1]);
	w_anode2077w[] = ( (w_anode2077w[2..2] & w_data2019w[2..2]), (w_anode2077w[1..1] & (! w_data2019w[1..1])), (w_anode2077w[0..0] & (! w_data2019w[0..0])), w_anode2021w[1..1]);
	w_anode2087w[] = ( (w_anode2087w[2..2] & w_data2019w[2..2]), (w_anode2087w[1..1] & (! w_data2019w[1..1])), (w_anode2087w[0..0] & w_data2019w[0..0]), w_anode2021w[1..1]);
	w_anode2097w[] = ( (w_anode2097w[2..2] & w_data2019w[2..2]), (w_anode2097w[1..1] & w_data2019w[1..1]), (w_anode2097w[0..0] & (! w_data2019w[0..0])), w_anode2021w[1..1]);
	w_anode2107w[] = ( (w_anode2107w[2..2] & w_data2019w[2..2]), (w_anode2107w[1..1] & w_data2019w[1..1]), (w_anode2107w[0..0] & w_data2019w[0..0]), w_anode2021w[1..1]);
	w_anode2119w[] = ( (w_anode2119w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2126w[] = ( (w_anode2126w[2..2] & (! w_data2019w[2..2])), (w_anode2126w[1..1] & (! w_data2019w[1..1])), (w_anode2126w[0..0] & (! w_data2019w[0..0])), w_anode2119w[1..1]);
	w_anode2137w[] = ( (w_anode2137w[2..2] & (! w_data2019w[2..2])), (w_anode2137w[1..1] & (! w_data2019w[1..1])), (w_anode2137w[0..0] & w_data2019w[0..0]), w_anode2119w[1..1]);
	w_anode2147w[] = ( (w_anode2147w[2..2] & (! w_data2019w[2..2])), (w_anode2147w[1..1] & w_data2019w[1..1]), (w_anode2147w[0..0] & (! w_data2019w[0..0])), w_anode2119w[1..1]);
	w_anode2157w[] = ( (w_anode2157w[2..2] & (! w_data2019w[2..2])), (w_anode2157w[1..1] & w_data2019w[1..1]), (w_anode2157w[0..0] & w_data2019w[0..0]), w_anode2119w[1..1]);
	w_anode2167w[] = ( (w_anode2167w[2..2] & w_data2019w[2..2]), (w_anode2167w[1..1] & (! w_data2019w[1..1])), (w_anode2167w[0..0] & (! w_data2019w[0..0])), w_anode2119w[1..1]);
	w_anode2177w[] = ( (w_anode2177w[2..2] & w_data2019w[2..2]), (w_anode2177w[1..1] & (! w_data2019w[1..1])), (w_anode2177w[0..0] & w_data2019w[0..0]), w_anode2119w[1..1]);
	w_anode2187w[] = ( (w_anode2187w[2..2] & w_data2019w[2..2]), (w_anode2187w[1..1] & w_data2019w[1..1]), (w_anode2187w[0..0] & (! w_data2019w[0..0])), w_anode2119w[1..1]);
	w_anode2197w[] = ( (w_anode2197w[2..2] & w_data2019w[2..2]), (w_anode2197w[1..1] & w_data2019w[1..1]), (w_anode2197w[0..0] & w_data2019w[0..0]), w_anode2119w[1..1]);
	w_data2019w[2..0] = data_wire[2..0];
END;
--VALID FILE
